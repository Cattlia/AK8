services:
  nginx:
#      image: lhgokstad/gokktestprosjekt:nginx_image
      build:
        context: .
        dockerfile: Dockerfile.AK8Nginx
      ports: 
        - "80:80"
      volumes:
        - ./AK8Nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./html:/usr/share/nginx/html
      depends_on:
        rest-api: 
          condition: service_started
      networks:
       - jallanet    
           

  rest-api:
#    image: lhgokstad/gokktestprosjekt:rest-api_image
    build:
      context: .
      dockerfile: Dockerfile.AK8Api
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Port=3306;Database=Vehicledatabase;User=user1;Password=user1p;
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      db:
        condition: service_healthy
    networks:
      #default:
      - jallanet  
      


  db:
 #   image: lhgokstad/gokktestprosjekt:db_image
    build:
        context: .
        dockerfile: Dockerfile.AK8Mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: Vehicledatabase
      MYSQL_USER: user1
      MYSQL_PASSWORD: user1p
    volumes:
     - db_data:/var/lib/mysql
     - ./AK8Mysql/init.sql:/docker-entrypoint-initdb.d/init.sql  
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3  
    networks:
      #default:
      - jallanet

volumes:
  # Volume for persisting MySQL data
  db_data:  
    driver: local
networks:
  jallanet:
    driver: bridge    




